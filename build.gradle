buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'edu.sc.seis.gradle:launch4j:2.4.4'
    }
}

plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

version '0.8'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "application"
apply plugin: 'edu.sc.seis.launch4j'

mainClassName = "prototype.Main"
sourceCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

repositories {
    jcenter()
}

javafx {
    version = "12.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

dependencies {
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
    implementation group: 'org.apache.poi', name: 'poi', version: '4.1.2'
    compile files(fileTree(dir: 'lib19', includes: ['*.jar']))
    compile fileTree(dir: 'lib19', include: ['*.jar'])
}

launch4j {
    mainClassName = 'prototype.Main'
//    icon = "${projectDir}\\src\\main\\resources\\icons\\logo\\logo_32.ico"
    bundledJrePath = "jre"
    bundledJre64Bit = true
    jreRuntimeBits = "64"
    copyright = 'S.S.S.'
    version = '0.0.6.0'
    textVersion = '0.0.6.0'
    outfile = project.name + ".exe"
}

jar {
    manifest {
        attributes 'Main-Class': 'prototype.Main'
    }
    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    from configurations.runtime.collect { zipTree(it) }
}

version = '0.1'
sourceCompatibility = 1.8
targetCompatibility = 1.8

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': 'prototype.Main'
    }
    baseName = 'prototype'
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}